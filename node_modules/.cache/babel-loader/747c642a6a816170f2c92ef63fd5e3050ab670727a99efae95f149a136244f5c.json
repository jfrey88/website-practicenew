{"ast":null,"code":"const comments = async idPost => {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${idPost}/comments`);\n  const data = await response.json();\n  console.log(data);\n  /*\r\n      const tabRec=getCommentsForPost(idPost)\r\n      \r\n      const tabrec = {\r\n          postId : idPost,\r\n          id : data.length,\r\n          name : localStorage.getItem(\"lastname\"),\r\n          email : localStorage.getItem(\"email\"),\r\n          body : localStorage.getItem(\"commentaire\")\r\n      }\r\n      data.push(rec);*/\n  return data;\n};\n/*\r\nconst getCommentsForPost=(idPost)=>{\r\n\r\n}*/\n\nconst addCommentForPost = (idPost, comment) => {\n  console.log(\"le commentaire brut \", comment);\n\n  //on stringify le commentaire, son auteur et l'email\n  let chaineComment = JSON.stringify(comment);\n  console.log(\"le commentaire en string \", chaineComment);\n  chaineComment = '[' + chaineComment[0] + '\"postId\":' + idPost + ',' + chaineComment.substring(1, chaineComment.length - 1) + ']';\n  console.log(\"le commentaire en string avec id\", chaineComment);\n  localStorage.setItem(\"commentaires\");\n  //on lit ce qui est dejà dans les commentaire\n\n  //localStorage.setItem(\"lastname\", comment.value.lastname);\n};\nexport { comments, addCommentForPost };","map":{"version":3,"names":["comments","idPost","response","fetch","data","json","console","log","addCommentForPost","comment","chaineComment","JSON","stringify","substring","length","localStorage","setItem"],"sources":["C:/Users/jfrey/Dropbox/cours/_webdev/code/semaine 3/jeudi/website-practice/src/models/comments.js"],"sourcesContent":["const comments = async(idPost)=>{       \r\n    const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${idPost}/comments`);\r\n    const data = await response.json();  \r\n    console.log(data)\r\n/*\r\n    const tabRec=getCommentsForPost(idPost)\r\n    \r\n    const tabrec = {\r\n        postId : idPost,\r\n        id : data.length,\r\n        name : localStorage.getItem(\"lastname\"),\r\n        email : localStorage.getItem(\"email\"),\r\n        body : localStorage.getItem(\"commentaire\")\r\n    }\r\n    data.push(rec);*/\r\n    return data;\r\n}\r\n/*\r\nconst getCommentsForPost=(idPost)=>{\r\n\r\n}*/\r\n\r\nconst addCommentForPost=(idPost,comment)=>{\r\n    console.log(\"le commentaire brut \",comment);\r\n\r\n    //on stringify le commentaire, son auteur et l'email\r\n    let chaineComment=JSON.stringify(comment);\r\n    console.log(\"le commentaire en string \",chaineComment);\r\n    chaineComment ='['+chaineComment[0]+'\"postId\":'+idPost+','+chaineComment.substring(1, chaineComment.length-1)+']';\r\n    console.log(\"le commentaire en string avec id\",chaineComment);\r\n\r\n    localStorage.setItem(\"commentaires\")\r\n    //on lit ce qui est dejà dans les commentaire\r\n\r\n    //localStorage.setItem(\"lastname\", comment.value.lastname);\r\n\r\n}\r\n\r\n\r\nexport {comments,addCommentForPost}"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAMC,MAAM,IAAG;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8CF,MAAM,WAAW,CAAC;EAC7F,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOA,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA;;AAEA,MAAMI,iBAAiB,GAACA,CAACP,MAAM,EAACQ,OAAO,KAAG;EACtCH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACE,OAAO,CAAC;;EAE3C;EACA,IAAIC,aAAa,GAACC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;EACzCH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAACG,aAAa,CAAC;EACtDA,aAAa,GAAE,GAAG,GAACA,aAAa,CAAC,CAAC,CAAC,GAAC,WAAW,GAACT,MAAM,GAAC,GAAG,GAACS,aAAa,CAACG,SAAS,CAAC,CAAC,EAAEH,aAAa,CAACI,MAAM,GAAC,CAAC,CAAC,GAAC,GAAG;EACjHR,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAACG,aAAa,CAAC;EAE7DK,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EACpC;;EAEA;AAEJ,CAAC;AAGD,SAAQhB,QAAQ,EAACQ,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}