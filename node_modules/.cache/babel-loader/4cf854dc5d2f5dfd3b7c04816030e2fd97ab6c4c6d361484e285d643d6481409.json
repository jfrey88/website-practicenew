{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst comments = async idPost => {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${idPost}/comments`);\n  const data = await response.json();\n  console.log(data);\n  const tabRec = getCommentsForPost(idPost);\n  const tabrec = {\n    postId: idPost,\n    id: data.length,\n    name: localStorage.getItem(\"lastname\"),\n    email: localStorage.getItem(\"email\"),\n    body: localStorage.getItem(\"commentaire\")\n  };\n  data.push(rec);\n  return data;\n};\nconst getCommentsForPost = idPost => {\n  const tabAllcomments = JSON.parse(localStorage.getItem(\"commentaires\"));\n  tabAllcomments.forEach(element => {\n    console.log(idPost, ' ', element);\n  });\n};\nconst addCommentForPost = (idPost, comment) => {\n  console.log(\"le commentaire brut \", comment);\n\n  //on stringify le commentaire, son auteur et l'email\n  let chaineComment = JSON.stringify(comment);\n  console.log(\"le commentaire en string \", chaineComment);\n  chaineComment = '[' + chaineComment[0] + '\"postId\":' + idPost + ',' + chaineComment.substring(1, chaineComment.length - 1) + ']';\n  console.log(\"le commentaire en string avec id\", chaineComment);\n  localStorage.setItem(\"commentaires\", chaineComment);\n  //on lit ce qui est dejà dans les commentaire\n\n  //localStorage.setItem(\"lastname\", comment.value.lastname);\n};\nexport { comments, addCommentForPost };","map":{"version":3,"names":["comments","idPost","response","fetch","data","json","console","log","tabRec","getCommentsForPost","tabrec","postId","id","length","name","localStorage","getItem","email","body","push","rec","tabAllcomments","JSON","parse","forEach","element","addCommentForPost","comment","chaineComment","stringify","substring","setItem"],"sources":["C:/Users/jfrey/Dropbox/cours/_webdev/code/semaine 3/jeudi/website-practice/src/models/comments.js"],"sourcesContent":["const comments = async(idPost)=>{       \r\n    const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${idPost}/comments`);\r\n    const data = await response.json();  \r\n    console.log(data)\r\n\r\n    const tabRec=getCommentsForPost(idPost)\r\n    \r\n    const tabrec = {\r\n        postId : idPost,\r\n        id : data.length,\r\n        name : localStorage.getItem(\"lastname\"),\r\n        email : localStorage.getItem(\"email\"),\r\n        body : localStorage.getItem(\"commentaire\")\r\n    }\r\n    data.push(rec);\r\n    return data;\r\n}\r\n\r\nconst getCommentsForPost=(idPost)=>{\r\n    const tabAllcomments = JSON.parse(localStorage.getItem(\"commentaires\"));\r\n    \r\n    tabAllcomments.forEach((element)=>{\r\n        console.log(idPost,' ',element);\r\n    })\r\n}\r\n\r\nconst addCommentForPost=(idPost,comment)=>{\r\n    console.log(\"le commentaire brut \",comment);\r\n\r\n    //on stringify le commentaire, son auteur et l'email\r\n    let chaineComment=JSON.stringify(comment);\r\n    console.log(\"le commentaire en string \",chaineComment);\r\n    chaineComment ='['+chaineComment[0]+'\"postId\":'+idPost+','+chaineComment.substring(1, chaineComment.length-1)+']';\r\n    console.log(\"le commentaire en string avec id\",chaineComment);\r\n\r\n    localStorage.setItem(\"commentaires\",chaineComment)\r\n    //on lit ce qui est dejà dans les commentaire\r\n\r\n    //localStorage.setItem(\"lastname\", comment.value.lastname);\r\n\r\n}\r\n\r\n\r\nexport {comments,addCommentForPost}"],"mappings":";AAAA,MAAMA,QAAQ,GAAG,MAAMC,MAAM,IAAG;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8CF,MAAM,WAAW,CAAC;EAC7F,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,MAAMI,MAAM,GAACC,kBAAkB,CAACR,MAAM,CAAC;EAEvC,MAAMS,MAAM,GAAG;IACXC,MAAM,EAAGV,MAAM;IACfW,EAAE,EAAGR,IAAI,CAACS,MAAM;IAChBC,IAAI,EAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvCC,KAAK,EAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACrCE,IAAI,EAAGH,YAAY,CAACC,OAAO,CAAC,aAAa;EAC7C,CAAC;EACDZ,IAAI,CAACe,IAAI,CAACC,GAAG,CAAC;EACd,OAAOhB,IAAI;AACf,CAAC;AAED,MAAMK,kBAAkB,GAAER,MAAM,IAAG;EAC/B,MAAMoB,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACR,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;EAEvEK,cAAc,CAACG,OAAO,CAAEC,OAAO,IAAG;IAC9BnB,OAAO,CAACC,GAAG,CAACN,MAAM,EAAC,GAAG,EAACwB,OAAO,CAAC;EACnC,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,iBAAiB,GAACA,CAACzB,MAAM,EAAC0B,OAAO,KAAG;EACtCrB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACoB,OAAO,CAAC;;EAE3C;EACA,IAAIC,aAAa,GAACN,IAAI,CAACO,SAAS,CAACF,OAAO,CAAC;EACzCrB,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAACqB,aAAa,CAAC;EACtDA,aAAa,GAAE,GAAG,GAACA,aAAa,CAAC,CAAC,CAAC,GAAC,WAAW,GAAC3B,MAAM,GAAC,GAAG,GAAC2B,aAAa,CAACE,SAAS,CAAC,CAAC,EAAEF,aAAa,CAACf,MAAM,GAAC,CAAC,CAAC,GAAC,GAAG;EACjHP,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAACqB,aAAa,CAAC;EAE7Db,YAAY,CAACgB,OAAO,CAAC,cAAc,EAACH,aAAa,CAAC;EAClD;;EAEA;AAEJ,CAAC;AAGD,SAAQ5B,QAAQ,EAAC0B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}