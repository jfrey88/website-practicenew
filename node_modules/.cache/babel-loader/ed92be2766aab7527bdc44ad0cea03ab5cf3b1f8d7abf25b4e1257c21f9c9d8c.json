{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst comments = async idPost => {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${idPost}/comments`);\n  const data = await response.json();\n  console.log(data);\n  const rec = {\n    postId: idPost,\n    id: data.length,\n    name: localStorage.getItem(\"lastname\"),\n    email: localStorage.getItem(\"email\"),\n    body: localStorage.getItem(\"commentaire\")\n  };\n  data.push(rec);\n  return data;\n};\n\n/*const getCommentsForPost=(idPost)=>{\r\n\r\n}*/\n\nconst addCommentForPost = (idPost, comment) => {\n  console.log(\"le commentaire brut \", comment);\n\n  //on stringify le commentaire, son auteur et l'email\n  let chaineComment = JSON.stringify(comment);\n  console.log(\"le commentaire en string \", chaineComment);\n  chaineComment = chaineComment[0] + \"postId:\" + idPost + \",\" + chaineComment.substring(1, chaineComment.length - 1);\n  console.log(\"le commentaire en string avec id\", chaineComment);\n\n  //on lit ce qui est dejà dans les commentaire\n\n  //localStorage.setItem(\"lastname\", comment.value.lastname);\n};\nexport { comments, addCommentForPost };","map":{"version":3,"names":["comments","idPost","response","fetch","data","json","console","log","rec","postId","id","length","name","localStorage","getItem","email","body","push","addCommentForPost","comment","chaineComment","JSON","stringify","substring"],"sources":["C:/Users/jfrey/Dropbox/cours/_webdev/code/semaine 3/jeudi/website-practice/src/models/comments.js"],"sourcesContent":["const comments = async(idPost)=>{       \r\n    const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${idPost}/comments`);\r\n    const data = await response.json();  \r\n    console.log(data)\r\n    \r\n    const rec = {\r\n        postId : idPost,\r\n        id : data.length,\r\n        name : localStorage.getItem(\"lastname\"),\r\n        email : localStorage.getItem(\"email\"),\r\n        body : localStorage.getItem(\"commentaire\")\r\n    }\r\n    data.push(rec);\r\n    return data;\r\n}\r\n\r\n/*const getCommentsForPost=(idPost)=>{\r\n\r\n}*/\r\n\r\nconst addCommentForPost=(idPost,comment)=>{\r\n    console.log(\"le commentaire brut \",comment);\r\n\r\n    //on stringify le commentaire, son auteur et l'email\r\n    let chaineComment=JSON.stringify(comment);\r\n    console.log(\"le commentaire en string \",chaineComment);\r\n    chaineComment =chaineComment[0]+\"postId:\"+idPost+\",\"+chaineComment.substring(1, chaineComment.length-1);\r\n    console.log(\"le commentaire en string avec id\",chaineComment);\r\n\r\n\r\n    //on lit ce qui est dejà dans les commentaire\r\n\r\n    //localStorage.setItem(\"lastname\", comment.value.lastname);\r\n\r\n}\r\n\r\n\r\nexport {comments,addCommentForPost}"],"mappings":";AAAA,MAAMA,QAAQ,GAAG,MAAMC,MAAM,IAAG;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8CF,MAAM,WAAW,CAAC;EAC7F,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,MAAMI,GAAG,GAAG;IACRC,MAAM,EAAGR,MAAM;IACfS,EAAE,EAAGN,IAAI,CAACO,MAAM;IAChBC,IAAI,EAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvCC,KAAK,EAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACrCE,IAAI,EAAGH,YAAY,CAACC,OAAO,CAAC,aAAa;EAC7C,CAAC;EACDV,IAAI,CAACa,IAAI,CAACT,GAAG,CAAC;EACd,OAAOJ,IAAI;AACf,CAAC;;AAED;AACA;AACA;;AAEA,MAAMc,iBAAiB,GAACA,CAACjB,MAAM,EAACkB,OAAO,KAAG;EACtCb,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACY,OAAO,CAAC;;EAE3C;EACA,IAAIC,aAAa,GAACC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;EACzCb,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAACa,aAAa,CAAC;EACtDA,aAAa,GAAEA,aAAa,CAAC,CAAC,CAAC,GAAC,SAAS,GAACnB,MAAM,GAAC,GAAG,GAACmB,aAAa,CAACG,SAAS,CAAC,CAAC,EAAEH,aAAa,CAACT,MAAM,GAAC,CAAC,CAAC;EACvGL,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAACa,aAAa,CAAC;;EAG7D;;EAEA;AAEJ,CAAC;AAGD,SAAQpB,QAAQ,EAACkB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}